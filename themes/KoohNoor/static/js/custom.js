/*!* Dropdownhover v1.0.0 (http://bs-dropdownhover.kybarg.com)*/
+function (e) { var d = function (g, f) { this.options = f; this.$element = e(g); var h = this; this.dropdowns = this.$element.hasClass("dropdown-toggle") ? this.$element.parent().find(".dropdown-menu").parent(".dropdown") : this.$element.find(".dropdown"); this.dropdowns.each(function () { e(this).on("mouseenter.bs.dropdownhover", function (i) { h.show(e(this).children("a, button")) }) }); this.dropdowns.each(function () { e(this).on("mouseleave.bs.dropdownhover", function (i) { h.hide(e(this).children("a, button")) }) }) }; d.TRANSITION_DURATION = 300; d.DELAY = 150; d.TIMEOUT; d.DEFAULTS = { animations: ["fadeInDown", "fadeInRight", "fadeInUp", "fadeInLeft"], }; d.prototype.show = function (n) { var k = e(n); window.clearTimeout(d.TIMEOUT); e(".dropdown").not(k.parents()).each(function () { e(this).removeClass("open") }); var m = this.options.animations[0]; if (k.is(".disabled, :disabled")) { return } var f = k.parent(); var l = f.hasClass("open"); if (!l) { var h = k.next(".dropdown-menu"); var j = { relatedTarget: this }; f.addClass("open"); var i = this.position(h); i == "top" ? m = this.options.animations[2] : i == "right" ? m = this.options.animations[3] : i == "left" ? m = this.options.animations[1] : m = this.options.animations[0]; h.addClass("animated " + m); var g = e.support.transition && h.hasClass("animated"); g ? h.one("bsTransitionEnd", function () { h.removeClass("animated " + m) }).emulateTransitionEnd(d.TRANSITION_DURATION) : h.removeClass("animated " + m) } return false }; d.prototype.hide = function (f) { var g = this; var i = e(f); var h = i.parent(); d.TIMEOUT = window.setTimeout(function () { h.removeClass("open") }, d.DELAY) }; d.prototype.position = function (n) { var j = e(window); n.css({ bottom: "", left: "", top: "", right: "" }).removeClass("dropdownhover-top"); var k = { top: j.scrollTop(), left: j.scrollLeft() }; k.right = k.left + j.width(); k.bottom = k.top + j.height(); var f = n.offset(); f.right = f.left + n.outerWidth(); f.bottom = f.top + n.outerHeight(); var i = n.position(); i.right = f.left + n.outerWidth(); i.bottom = f.top + n.outerHeight(); var l = ""; var h = n.parents(".dropdown-menu").length; if (h) { if (i.left < 0) { l = "left"; n.removeClass("dropdownhover-right").addClass("dropdownhover-left") } else { l = "right"; n.addClass("dropdownhover-right").removeClass("dropdownhover-left") } if (f.left < k.left) { l = "right"; n.css({ left: "100%", right: "auto" }).addClass("dropdownhover-right").removeClass("dropdownhover-left") } else { if (f.right > k.right) { l = "left"; n.css({ left: "auto", right: "100%" }).removeClass("dropdownhover-right").addClass("dropdownhover-left") } } if (f.bottom > k.bottom) { n.css({ bottom: "auto", top: -(f.bottom - k.bottom) }) } else { if (f.top < k.top) { n.css({ bottom: -(k.top - f.top), top: "auto" }) } } } else { var g = n.parent(".dropdown"); var m = g.offset(); m.right = m.left + g.outerWidth(); m.bottom = m.top + g.outerHeight(); if (f.right > k.right) { n.css({ left: -(f.right - k.right), right: "auto" }) } if (f.bottom > k.bottom && (m.top - k.top) > (k.bottom - m.bottom) || n.position().top < 0) { l = "top"; n.css({ bottom: "100%", top: "auto" }).addClass("dropdownhover-top").removeClass("dropdownhover-bottom") } else { l = "bottom"; n.addClass("dropdownhover-bottom") } } return l }; function c(f) { return this.each(function () { var j = e(this); var i = j.data("bs.dropdownhover"); var h = j.data(); if (j.data("animations") !== undefined && j.data("animations") !== null) { h.animations = e.isArray(h.animations) ? h.animations : h.animations.split(" ") } var g = e.extend({}, d.DEFAULTS, h, typeof f == "object" && f); if (!i) { j.data("bs.dropdownhover", (i = new d(this, g))) } }) } var b = e.fn.dropdownhover; e.fn.dropdownhover = c; e.fn.dropdownhover.Constructor = d; e.fn.dropdownhover.noConflict = function () { e.fn.dropdownhover = b; return this }; var a; e(document).ready(function () { if (e(window).width() >= 768) { e('[data-hover="dropdown"]').each(function () { var f = e(this); c.call(f, f.data()) }) } }); e(window).on("resize", function () { clearTimeout(a); a = setTimeout(function () { if (e(window).width() >= 768) { e('[data-hover="dropdown"]').each(function () { var f = e(this); c.call(f, f.data()) }) } else { e('[data-hover="dropdown"]').each(function () { e(this).removeData("bs.dropdownhover"); if (e(this).hasClass("dropdown-toggle")) { e(this).parent(".dropdown").find(".dropdown").andSelf().off("mouseenter.bs.dropdownhover mouseleave.bs.dropdownhover") } else { e(this).find(".dropdown").off("mouseenter.bs.dropdownhover mouseleave.bs.dropdownhover") } }) } }, 200) }) }(jQuery);
/************************ on-click **************************/
function doHrefAction(hrefContainerId) {
    location.href = $('.' + hrefContainerId).attr('href');
}
/************************ Menuresiaze **************************/
$(".links li.have-sub a").click(function (b) {
    var c = $(this).parent("li").hasClass("noSub");
    if (!c) { b.preventDefault() } $(this).parent("li").siblings("li").children("ul").slideUp("fast");
    $(this).parent("li").siblings("li").removeClass("open-li");
    $(this).parent("li").toggleClass("open-li");
    var a = $(this).parent().children("ul:first"); a.slideToggle("down");
});

/**************************** LIMIT ****************************/
var element = document.querySelectorAll("[data-limitedText]"); for (var i = 0; i < element.length; i++) { var attrVal = parseInt(element[i].attributes["data-limitedText"].value); if (element[i].innerHTML.length > attrVal) { var findSpace = false; for (var j = attrVal - 4; j > 1; j--) { if (element[i].innerHTML.substring(j - 1, j) == " ") { findSpace = true; element[i].innerHTML = element[i].innerHTML.substring(0, j) + " ..."; break } } if (!findSpace) { element[i].innerHTML = element[i].innerHTML.substring(0, attrVal) } } };

/*------------------- fancyin -----------------------*/
!function (a) { "use strict"; var f = { cache: {}, support: {}, objects: {}, init: function (e) { return this.each(function () { a(this).unbind("click.lightcase").bind("click.lightcase", function (t) { t.preventDefault(), a(this).lightcase("start", e) }) }) }, start: function (t) { f.origin = lightcase.origin = this, f.settings = lightcase.settings = a.extend(!0, { idPrefix: "lightcase-", classPrefix: "lightcase-", attrPrefix: "lc-", transition: "elastic", transitionIn: null, transitionOut: null, cssTransitions: !0, speedIn: 250, speedOut: 250, maxWidth: 800, maxHeight: 500, forceWidth: !1, forceHeight: !1, liveResize: !0, fullScreenModeForMobile: !0, mobileMatchExpression: /(iphone|ipod|ipad|android|blackberry|symbian)/, disableShrink: !1, shrinkFactor: .75, overlayOpacity: .9, slideshow: !1, timeout: 5e3, swipe: !0, useKeys: !0, useCategories: !0, navigateEndless: !0, closeOnOverlayClick: !0, title: null, caption: null, showTitle: !0, showCaption: !0, showSequenceInfo: !0, inline: { width: "auto", height: "auto" }, ajax: { width: "auto", height: "auto", type: "get", dataType: "html", data: {} }, iframe: { width: 800, height: 500, frameborder: 0 }, flash: { width: 400, height: 205, wmode: "transparent" }, video: { width: 400, height: 225, poster: "", preload: "auto", controls: !0, autobuffer: !0, autoplay: !0, loop: !1 }, attr: "data-rel", href: null, type: null, typeMapping: { image: "jpg,jpeg,gif,png,bmp", flash: "swf", video: "mp4,mov,ogv,ogg,webm", iframe: "html,php", ajax: "json,txt", inline: "#" }, errorMessage: function () { return '<p class="' + f.settings.classPrefix + 'error">' + f.settings.labels.errorMessage + "</p>" }, labels: { errorMessage: "Source could not be found...", "sequenceInfo.of": " از ", close: "Close", "navigator.prev": "Prev", "navigator.next": "Next", "navigator.play": "Play", "navigator.pause": "Pause" }, markup: function () { a("body").append(f.objects.overlay = a('<div id="' + f.settings.idPrefix + 'overlay"></div>'), f.objects.loading = a('<div id="' + f.settings.idPrefix + 'loading" class="' + f.settings.classPrefix + 'icon-spin"></div>'), f.objects.case = a('<div id="' + f.settings.idPrefix + 'case" aria-hidden="true" role="dialog"></div>')), f.objects.case.after(f.objects.nav = a('<div id="' + f.settings.idPrefix + 'nav"></div>')), f.objects.nav.append(f.objects.close = a('<a href="#" class="' + f.settings.classPrefix + 'icon-close"><span>' + f.settings.labels.close + "</span></a>"), f.objects.prev = a('<a href="#" class="' + f.settings.classPrefix + 'icon-prev"><span>' + f.settings.labels["navigator.prev"] + "</span></a>").hide(), f.objects.next = a('<a href="#" class="' + f.settings.classPrefix + 'icon-next"><span>' + f.settings.labels["navigator.next"] + "</span></a>").hide(), f.objects.play = a('<a href="#" class="' + f.settings.classPrefix + 'icon-play"><span>' + f.settings.labels["navigator.play"] + "</span></a>").hide(), f.objects.pause = a('<a href="#" class="' + f.settings.classPrefix + 'icon-pause"><span>' + f.settings.labels["navigator.pause"] + "</span></a>").hide()), f.objects.case.append(f.objects.content = a('<div id="' + f.settings.idPrefix + 'content"></div>'), f.objects.info = a('<div id="' + f.settings.idPrefix + 'info"></div>')), f.objects.content.append(f.objects.contentInner = a('<div class="' + f.settings.classPrefix + 'contentInner"></div>')), f.objects.info.append(f.objects.sequenceInfo = a('<div id="' + f.settings.idPrefix + 'sequenceInfo"></div>'), f.objects.title = a('<h4 id="' + f.settings.idPrefix + 'title"></h4>'), f.objects.caption = a('<p id="' + f.settings.idPrefix + 'caption"></p>')) }, onInit: {}, onStart: {}, onFinish: {}, onClose: {}, onCleanup: {} }, t), f._callHooks(f.settings.onInit), f.objectData = f._setObjectData(this), f._cacheScrollPosition(), f._watchScrollInteraction(), f._addElements(), f._open(), f.dimensions = f.getViewportDimensions() }, get: function (t) { return f.objects[t] }, getObjectData: function () { return f.objectData }, _setObjectData: function (t) { var e = a(t), i = { title: f.settings.title || e.attr(f._prefixAttributeName("title")) || e.attr("title"), caption: f.settings.caption || e.attr(f._prefixAttributeName("caption")) || e.children("img").attr("alt"), url: f._determineUrl(), requestType: f.settings.ajax.type, requestData: f.settings.ajax.data, requestDataType: f.settings.ajax.dataType, rel: e.attr(f._determineAttributeSelector()), type: f.settings.type || f._verifyDataType(f._determineUrl()), isPartOfSequence: f._isPartOfSequence(e.attr(f.settings.attr), ":"), isPartOfSequenceWithSlideshow: f._isPartOfSequence(e.attr(f.settings.attr), ":slideshow"), currentIndex: a(f._determineAttributeSelector()).index(e), sequenceLength: a(f._determineAttributeSelector()).length }; return i.sequenceInfo = i.currentIndex + 1 + f.settings.labels["sequenceInfo.of"] + i.sequenceLength, i.prevIndex = i.currentIndex - 1, i.nextIndex = i.currentIndex + 1, i }, _prefixAttributeName: function (t) { return "data-" + f.settings.attrPrefix + t }, _determineLinkTarget: function () { return f.settings.href || a(f.origin).attr(f._prefixAttributeName("href")) || a(f.origin).attr("href") }, _determineAttributeSelector: function () { var t = a(f.origin), i = ""; if (void 0 !== f.cache.selector) i = f.cache.selector; else if (!0 === f.settings.useCategories && t.attr(f._prefixAttributeName("categories"))) { var e = t.attr(f._prefixAttributeName("categories")).split(" "); a.each(e, function (t, e) { 0 < t && (i += ","), i += "[" + f._prefixAttributeName("categories") + '~="' + e + '"]' }) } else i = "[" + f.settings.attr + '="' + t.attr(f.settings.attr) + '"]'; return f.cache.selector = i }, _determineUrl: function () { var i, t = f._verifyDataUrl(f._determineLinkTarget()), s = 0, n = 0; return a.each(t, function (t, e) { f._devicePixelRatio() >= e.density && e.density >= n && f._matchMedia()("screen and (min-width:" + e.width + "px)") && e.width >= s && (s = e.width, n = e.density, i = e.url) }), i }, _normalizeUrl: function (i) { return i.split(",").map(function (t) { var e = { width: 0, density: 0 }; return e.url = i, e }) }, _isPartOfSequence: function (t, e) { var i = a("[" + f.settings.attr + '="' + t + '"]'); return new RegExp(e).test(t) && 1 < i.length }, isSlideshowEnabled: function () { return f.objectData.isPartOfSequence && (!0 === f.settings.slideshow || !0 === f.objectData.isPartOfSequenceWithSlideshow) }, _loadContent: function () { f.cache.originalObject && f._restoreObject(), f._createObject() }, _createObject: function () { var i; switch (f.objectData.type) { case "image": (i = a(new Image)).attr({ src: f.objectData.url, alt: f.objectData.title }); break; case "inline": (i = a('<div class="' + f.settings.classPrefix + 'inlineWrap"></div>')).html(f._cloneObject(a(f.objectData.url))), a.each(f.settings.inline, function (t, e) { i.attr(f._prefixAttributeName(t), e) }); break; case "ajax": i = a('<div class="' + f.settings.classPrefix + 'inlineWrap"></div>'), a.each(f.settings.ajax, function (t, e) { "data" !== t && i.attr(f._prefixAttributeName(t), e) }); break; case "flash": i = a('<embed src="' + f.objectData.url + '" type="application/x-shockwave-flash"></embed>'), a.each(f.settings.flash, function (t, e) { i.attr(t, e) }); break; case "video": (i = a("<video></video>")).attr("src", f.objectData.url), a.each(f.settings.video, function (t, e) { i.attr(t, e) }); break; default: (i = a("<iframe></iframe>")).attr({ src: f.objectData.url }), a.each(f.settings.iframe, function (t, e) { i.attr(t, e) }) }f._addObject(i), f._loadObject(i) }, _addObject: function (t) { f.objects.contentInner.html(t), f._loading("start"), f._callHooks(f.settings.onStart), !0 === f.settings.showSequenceInfo && f.objectData.isPartOfSequence ? (f.objects.sequenceInfo.html(f.objectData.sequenceInfo), f.objects.sequenceInfo.show()) : (f.objects.sequenceInfo.empty(), f.objects.sequenceInfo.hide()), !0 === f.settings.showTitle && void 0 !== f.objectData.title && "" !== f.objectData.title ? (f.objects.title.html(f.objectData.title), f.objects.title.show()) : (f.objects.title.empty(), f.objects.title.hide()), !0 === f.settings.showCaption && void 0 !== f.objectData.caption && "" !== f.objectData.caption ? (f.objects.caption.html(f.objectData.caption), f.objects.caption.show()) : (f.objects.caption.empty(), f.objects.caption.hide()) }, _loadObject: function (s) { switch (f.objectData.type) { case "inline": a(f.objectData.url) ? f._showContent(s) : f.error(); break; case "ajax": a.ajax(a.extend({}, f.settings.ajax, { url: f.objectData.url, type: f.objectData.requestType, dataType: f.objectData.requestDataType, data: f.objectData.requestData, success: function (t, e, i) { "json" === f.objectData.requestDataType ? f.objectData.data = t : s.html(t), f._showContent(s) }, error: function (t, e, i) { f.error() } })); break; case "flash": f._showContent(s); break; case "video": "function" == typeof s.get(0).canPlayType || 0 === f.objects.case.find("video").length ? f._showContent(s) : f.error(); break; default: f.objectData.url ? (s.load(function () { f._showContent(s) }), s.error(function () { f.error() })) : f.error() } }, error: function () { f.objectData.type = "error"; var t = a('<div class="' + f.settings.classPrefix + 'inlineWrap"></div>'); t.html(f.settings.errorMessage), f.objects.contentInner.html(t), f._showContent(f.objects.contentInner) }, _calculateDimensions: function (t) { f._cleanupDimensions(); var e = { objectWidth: t.attr("width") ? t.attr("width") : t.attr(f._prefixAttributeName("width")), objectHeight: t.attr("height") ? t.attr("height") : t.attr(f._prefixAttributeName("height")) }; if (!f.settings.disableShrink) switch (e.maxWidth = parseInt(f.dimensions.windowWidth * f.settings.shrinkFactor), e.maxHeight = parseInt(f.dimensions.windowHeight * f.settings.shrinkFactor), e.maxWidth > f.settings.maxWidth && (e.maxWidth = f.settings.maxWidth), e.maxHeight > f.settings.maxHeight && (e.maxHeight = f.settings.maxHeight), e.differenceWidthAsPercent = parseInt(100 / e.maxWidth * e.objectWidth), e.differenceHeightAsPercent = parseInt(100 / e.maxHeight * e.objectHeight), f.objectData.type) { case "image": case "flash": case "video": 100 < e.differenceWidthAsPercent && e.differenceWidthAsPercent > e.differenceHeightAsPercent && (e.objectWidth = e.maxWidth, e.objectHeight = parseInt(e.objectHeight / e.differenceWidthAsPercent * 100)), 100 < e.differenceHeightAsPercent && e.differenceHeightAsPercent > e.differenceWidthAsPercent && (e.objectWidth = parseInt(e.objectWidth / e.differenceHeightAsPercent * 100), e.objectHeight = e.maxHeight), 100 < e.differenceHeightAsPercent && e.differenceWidthAsPercent < e.differenceHeightAsPercent && (e.objectWidth = parseInt(e.maxWidth / e.differenceHeightAsPercent * e.differenceWidthAsPercent), e.objectHeight = e.maxHeight); break; case "error": !isNaN(e.objectWidth) && e.objectWidth > e.maxWidth && (e.objectWidth = e.maxWidth); break; default: (isNaN(e.objectWidth) || e.objectWidth > e.maxWidth) && !f.settings.forceWidth && (e.objectWidth = e.maxWidth), (isNaN(e.objectHeight) && "auto" !== e.objectHeight || e.objectHeight > e.maxHeight) && !f.settings.forceHeight && (e.objectHeight = e.maxHeight) }f.settings.forceWidth ? e.maxWidth = e.objectWidth : t.attr(f._prefixAttributeName("max-width")) && (e.maxWidth = t.attr(f._prefixAttributeName("max-width"))), f.settings.forceHeight ? e.maxHeight = e.objectHeight : t.attr(f._prefixAttributeName("max-height")) && (e.maxHeight = t.attr(f._prefixAttributeName("max-height"))), f._adjustDimensions(t, e) }, _adjustDimensions: function (t, e) { t.css({ width: e.objectWidth, height: e.objectHeight, "max-width": e.maxWidth, "max-height": e.maxHeight }), f.objects.contentInner.css({ width: t.outerWidth(), height: t.outerHeight(), "max-width": "100%" }), f.objects.case.css({ width: f.objects.contentInner.outerWidth() }), f.objects.case.css({ "margin-top": parseInt(-f.objects.case.outerHeight() / 2), "margin-left": parseInt(-f.objects.case.outerWidth() / 2) }) }, _loading: function (t) { "start" === t ? (f.objects.case.addClass(f.settings.classPrefix + "loading"), f.objects.loading.show()) : "end" === t && (f.objects.case.removeClass(f.settings.classPrefix + "loading"), f.objects.loading.hide()) }, getViewportDimensions: function () { return { windowWidth: a(window).innerWidth(), windowHeight: a(window).innerHeight() } }, _verifyDataUrl: function (t) { return !(!t || void 0 === t || "" === t) && (-1 < t.indexOf("#") && (t = "#" + (t = t.split("#"))[t.length - 1]), f._normalizeUrl(t.toString())) }, _verifyDataType: function (t) { var e = f.settings.typeMapping; if (!t) return !1; for (var i in e) if (e.hasOwnProperty(i)) for (var s = e[i].split(","), n = 0; n < s.length; n++) { var a = s[n].toLowerCase(), o = new RegExp(".(" + a + ")$", "i"), c = t.toLowerCase().split("?")[0].substr(-5); if (!0 === o.test(c) || "inline" === i && -1 < t.indexOf(a)) return i } return "iframe" }, _addElements: function () { void 0 !== f.objects.case && a("#" + f.objects.case.attr("id")).length || f.settings.markup() }, _showContent: function (t) { switch (f.objects.case.attr(f._prefixAttributeName("type"), f.objectData.type), f.cache.object = t, f._calculateDimensions(t), f._callHooks(f.settings.onFinish), f.settings.transitionIn) { case "scrollTop": case "scrollRight": case "scrollBottom": case "scrollLeft": case "scrollHorizontal": case "scrollVertical": f.transition.scroll(f.objects.case, "in", f.settings.speedIn), f.transition.fade(f.objects.contentInner, "in", f.settings.speedIn); break; case "elastic": f.objects.case.css("opacity") < 1 && (f.transition.zoom(f.objects.case, "in", f.settings.speedIn), f.transition.fade(f.objects.contentInner, "in", f.settings.speedIn)); case "fade": case "fadeInline": f.transition.fade(f.objects.case, "in", f.settings.speedIn), f.transition.fade(f.objects.contentInner, "in", f.settings.speedIn); break; default: f.transition.fade(f.objects.case, "in", 0) }f._loading("end"), f.isBusy = !1 }, _processContent: function () { switch (f.isBusy = !0, f.settings.transitionOut) { case "scrollTop": case "scrollRight": case "scrollBottom": case "scrollLeft": case "scrollVertical": case "scrollHorizontal": f.objects.case.is(":hidden") ? (f.transition.fade(f.objects.case, "out", 0, 0, function () { f._loadContent() }), f.transition.fade(f.objects.contentInner, "out", 0)) : f.transition.scroll(f.objects.case, "out", f.settings.speedOut, function () { f._loadContent() }); break; case "fade": f.objects.case.is(":hidden") ? f.transition.fade(f.objects.case, "out", 0, 0, function () { f._loadContent() }) : f.transition.fade(f.objects.case, "out", f.settings.speedOut, 0, function () { f._loadContent() }); break; case "fadeInline": case "elastic": f.objects.case.is(":hidden") ? f.transition.fade(f.objects.case, "out", 0, 0, function () { f._loadContent() }) : f.transition.fade(f.objects.contentInner, "out", f.settings.speedOut, 0, function () { f._loadContent() }); break; default: f.transition.fade(f.objects.case, "out", 0, 0, function () { f._loadContent() }) } }, _handleEvents: function () { f._unbindEvents(), f.objects.nav.children().not(f.objects.close).hide(), f.isSlideshowEnabled() && (f.objects.nav.hasClass(f.settings.classPrefix + "paused") ? f._stopTimeout() : f._startTimeout()), f.settings.liveResize && f._watchResizeInteraction(), f.objects.close.click(function (t) { t.preventDefault(), f.close() }), !0 === f.settings.closeOnOverlayClick && f.objects.overlay.css("cursor", "pointer").click(function (t) { t.preventDefault(), f.close() }), !0 === f.settings.useKeys && f._addKeyEvents(), f.objectData.isPartOfSequence && (f.objects.nav.attr(f._prefixAttributeName("ispartofsequence"), !0), f.objects.nav.data("items", f._setNavigation()), f.objects.prev.click(function (t) { t.preventDefault(), !0 !== f.settings.navigateEndless && f.item.isFirst() || (f.objects.prev.unbind("click"), f.cache.action = "prev", f.objects.nav.data("items").prev.click(), f.isSlideshowEnabled() && f._stopTimeout()) }), f.objects.next.click(function (t) { t.preventDefault(), !0 !== f.settings.navigateEndless && f.item.isLast() || (f.objects.next.unbind("click"), f.cache.action = "next", f.objects.nav.data("items").next.click(), f.isSlideshowEnabled() && f._stopTimeout()) }), f.isSlideshowEnabled() && (f.objects.play.click(function (t) { t.preventDefault(), f._startTimeout() }), f.objects.pause.click(function (t) { t.preventDefault(), f._stopTimeout() })), !0 === f.settings.swipe && (a.isPlainObject(a.event.special.swipeleft) && f.objects.case.on("swipeleft", function (t) { t.preventDefault(), f.objects.next.click(), f.isSlideshowEnabled() && f._stopTimeout() }), a.isPlainObject(a.event.special.swiperight) && f.objects.case.on("swiperight", function (t) { t.preventDefault(), f.objects.prev.click(), f.isSlideshowEnabled() && f._stopTimeout() }))) }, _addKeyEvents: function () { a(document).bind("keyup.lightcase", function (t) { if (!f.isBusy) switch (t.keyCode) { case 27: f.objects.close.click(); break; case 37: f.objectData.isPartOfSequence && f.objects.prev.click(); break; case 39: f.objectData.isPartOfSequence && f.objects.next.click() } }) }, _startTimeout: function () { f.objects.play.hide(), f.objects.pause.show(), f.cache.action = "next", f.objects.nav.removeClass(f.settings.classPrefix + "paused"), f.timeout = setTimeout(function () { f.objects.nav.data("items").next.click() }, f.settings.timeout) }, _stopTimeout: function () { f.objects.play.show(), f.objects.pause.hide(), f.objects.nav.addClass(f.settings.classPrefix + "paused"), clearTimeout(f.timeout) }, _setNavigation: function () { var t = a(f.cache.selector || f.settings.attr), e = f.objectData.sequenceLength - 1, i = { prev: t.eq(f.objectData.prevIndex), next: t.eq(f.objectData.nextIndex) }; return 0 < f.objectData.currentIndex ? f.objects.prev.show() : i.prevItem = t.eq(e), f.objectData.nextIndex <= e ? f.objects.next.show() : i.next = t.eq(0), !0 === f.settings.navigateEndless && (f.objects.prev.show(), f.objects.next.show()), i }, item: { isFirst: function () { return 0 === f.objectData.currentIndex }, isLast: function () { return f.objectData.currentIndex === f.objectData.sequenceLength - 1 } }, _cloneObject: function (t) { var e = t.clone(), i = t.attr("id"); return t.is(":hidden") ? (f._cacheObjectData(t), t.attr("id", f.settings.idPrefix + "temp-" + i).empty()) : e.removeAttr("id"), e.show() }, isMobileDevice: function () { return !!navigator.userAgent.toLowerCase().match(f.settings.mobileMatchExpression) }, isTransitionSupported: function () { var t = a("body").get(0), e = !1, i = { transition: "", WebkitTransition: "-webkit-", MozTransition: "-moz-", OTransition: "-o-", MsTransition: "-ms-" }; for (var s in i) i.hasOwnProperty(s) && s in t.style && (f.support.transition = i[s], e = !0); return e }, transition: { fade: function (t, e, i, s, n) { var a = "in" === e, o = {}, c = t.css("opacity"), r = {}, l = s || (a ? 1 : 0); !f.isOpen && a || (o.opacity = c, r.opacity = l, t.css(o).show(), f.support.transitions ? (r[f.support.transition + "transition"] = i + "ms ease", setTimeout(function () { t.css(r), setTimeout(function () { t.css(f.support.transition + "transition", ""), !n || !f.isOpen && a || n() }, i) }, 15)) : (t.stop(), t.animate(r, i, n))) }, scroll: function (t, e, i, s) { var n = "in" === e, a = n ? f.settings.transitionIn : f.settings.transitionOut, o = "left", c = {}, r = n ? 0 : 1, l = n ? "-50%" : "50%", d = {}, u = n ? 1 : 0, h = n ? "50%" : "-50%"; if (f.isOpen || !n) { switch (a) { case "scrollTop": o = "top"; break; case "scrollRight": l = n ? "150%" : "50%", h = n ? "50%" : "150%"; break; case "scrollBottom": o = "top", l = n ? "150%" : "50%", h = n ? "50%" : "150%"; break; case "scrollHorizontal": l = n ? "150%" : "50%", h = n ? "50%" : "-50%"; break; case "scrollVertical": o = "top", l = n ? "-50%" : "50%", h = n ? "50%" : "150%" }if ("prev" === f.cache.action) switch (a) { case "scrollHorizontal": l = n ? "-50%" : "50%", h = n ? "50%" : "150%"; break; case "scrollVertical": l = n ? "150%" : "50%", h = n ? "50%" : "-50%" }c.opacity = r, c[o] = l, d.opacity = u, d[o] = h, t.css(c).show(), f.support.transitions ? (d[f.support.transition + "transition"] = i + "ms ease", setTimeout(function () { t.css(d), setTimeout(function () { t.css(f.support.transition + "transition", ""), !s || !f.isOpen && n || s() }, i) }, 15)) : (t.stop(), t.animate(d, i, s)) } }, zoom: function (t, e, i, s) { var n = "in" === e, a = {}, o = t.css("opacity"), c = n ? "scale(0.75)" : "scale(1)", r = {}, l = n ? 1 : 0, d = n ? "scale(1)" : "scale(0.75)"; !f.isOpen && n || (a.opacity = o, a[f.support.transition + "transform"] = c, r.opacity = l, t.css(a).show(), f.support.transitions ? (r[f.support.transition + "transform"] = d, r[f.support.transition + "transition"] = i + "ms ease", setTimeout(function () { t.css(r), setTimeout(function () { t.css(f.support.transition + "transform", ""), t.css(f.support.transition + "transition", ""), !s || !f.isOpen && n || s() }, i) }, 15)) : (t.stop(), t.animate(r, i, s))) } }, _callHooks: function (t) { "object" == typeof t && a.each(t, function (t, e) { "function" == typeof e && e.call(f.origin) }) }, _cacheObjectData: function (t) { a.data(t, "cache", { id: t.attr("id"), content: t.html() }), f.cache.originalObject = t }, _restoreObject: function () { var t = a('[id^="' + f.settings.idPrefix + 'temp-"]'); t.attr("id", a.data(f.cache.originalObject, "cache").id), t.html(a.data(f.cache.originalObject, "cache").content) }, resize: function () { f.isOpen && (f.isSlideshowEnabled() && f._stopTimeout(), f.dimensions = f.getViewportDimensions(), f._calculateDimensions(f.cache.object)) }, _cacheScrollPosition: function () { var t = a(window), e = a(document), i = { top: t.scrollTop(), left: t.scrollLeft() }; f.cache.scrollPosition = f.cache.scrollPosition || {}, e.width() > t.width() && (f.cache.scrollPosition.left = i.left), e.height() > t.height() && (f.cache.scrollPosition.top = i.top) }, _watchResizeInteraction: function () { a(window).resize(f.resize) }, _unwatchResizeInteraction: function () { a(window).off("resize", f.resize) }, _watchScrollInteraction: function () { a(window).scroll(f._cacheScrollPosition) }, _unwatchScrollInteraction: function () { a(window).off("scroll", f._cacheScrollPosition) }, _restoreScrollPosition: function () { a(window).scrollTop(parseInt(f.cache.scrollPosition.top)).scrollLeft(parseInt(f.cache.scrollPosition.left)).resize() }, _switchToFullScreenMode: function () { f.settings.shrinkFactor = 1, f.settings.overlayOpacity = 1, a("html").addClass(f.settings.classPrefix + "fullScreenMode") }, _open: function () { switch (f.isOpen = !0, f.support.transitions = !!f.settings.cssTransitions && f.isTransitionSupported(), f.support.mobileDevice = f.isMobileDevice(), f.support.mobileDevice && (a("html").addClass(f.settings.classPrefix + "isMobileDevice"), f.settings.fullScreenModeForMobile && f._switchToFullScreenMode()), f.settings.transitionIn || (f.settings.transitionIn = f.settings.transition), f.settings.transitionOut || (f.settings.transitionOut = f.settings.transition), f.settings.transitionIn) { case "fade": case "fadeInline": case "elastic": case "scrollTop": case "scrollRight": case "scrollBottom": case "scrollLeft": case "scrollVertical": case "scrollHorizontal": f.objects.case.is(":hidden") && (f.objects.close.css("opacity", 0), f.objects.overlay.css("opacity", 0), f.objects.case.css("opacity", 0), f.objects.contentInner.css("opacity", 0)), f.transition.fade(f.objects.overlay, "in", f.settings.speedIn, f.settings.overlayOpacity, function () { f.transition.fade(f.objects.close, "in", f.settings.speedIn), f._handleEvents(), f._processContent() }); break; default: f.transition.fade(f.objects.overlay, "in", 0, f.settings.overlayOpacity, function () { f.transition.fade(f.objects.close, "in", 0), f._handleEvents(), f._processContent() }) }a("html").addClass(f.settings.classPrefix + "open"), f.objects.case.attr("aria-hidden", "false") }, close: function () { switch (f.isOpen = !1, f.isSlideshowEnabled() && (f._stopTimeout(), f.objects.nav.removeClass(f.settings.classPrefix + "paused")), f.objects.loading.hide(), f._unbindEvents(), f._unwatchResizeInteraction(), f._unwatchScrollInteraction(), a("html").removeClass(f.settings.classPrefix + "open"), f.objects.case.attr("aria-hidden", "true"), f.objects.nav.children().hide(), f._restoreScrollPosition(), f._callHooks(f.settings.onClose), f.settings.transitionOut) { case "fade": case "fadeInline": case "scrollTop": case "scrollRight": case "scrollBottom": case "scrollLeft": case "scrollHorizontal": case "scrollVertical": f.transition.fade(f.objects.case, "out", f.settings.speedOut, 0, function () { f.transition.fade(f.objects.overlay, "out", f.settings.speedOut, 0, function () { f.cleanup() }) }); break; case "elastic": f.transition.zoom(f.objects.case, "out", f.settings.speedOut, function () { f.transition.fade(f.objects.overlay, "out", f.settings.speedOut, 0, function () { f.cleanup() }) }); break; default: f.cleanup() } }, _unbindEvents: function () { f.objects.overlay.unbind("click"), a(document).unbind("keyup.lightcase"), f.objects.case.unbind("swipeleft").unbind("swiperight"), f.objects.prev.unbind("click"), f.objects.next.unbind("click"), f.objects.play.unbind("click"), f.objects.pause.unbind("click"), f.objects.close.unbind("click") }, _cleanupDimensions: function () { var t = f.objects.contentInner.css("opacity"); f.objects.case.css({ width: "", height: "", top: "", left: "", "margin-top": "", "margin-left": "" }), f.objects.contentInner.removeAttr("style").css("opacity", t), f.objects.contentInner.children().removeAttr("style") }, cleanup: function () { f._cleanupDimensions(), f.objects.loading.hide(), f.objects.overlay.hide(), f.objects.case.hide(), f.objects.prev.hide(), f.objects.next.hide(), f.objects.play.hide(), f.objects.pause.hide(), f.objects.case.removeAttr(f._prefixAttributeName("type")), f.objects.nav.removeAttr(f._prefixAttributeName("ispartofsequence")), f.objects.contentInner.empty().hide(), f.objects.info.children().empty(), f.cache.originalObject && f._restoreObject(), f._callHooks(f.settings.onCleanup), f.cache = {} }, _matchMedia: function () { return window.matchMedia || window.msMatchMedia }, _devicePixelRatio: function () { return window.devicePixelRatio || 1 }, _isPublicMethod: function (t) { return "function" == typeof f[t] && "_" !== t.charAt(0) }, _export: function () { window.lightcase = {}, a.each(f, function (t) { f._isPublicMethod(t) && (lightcase[t] = f[t]) }) } }; f._export(), a.fn.lightcase = function (t) { return f._isPublicMethod(t) ? f[t].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof t && t ? void a.error("Method " + t + " does not exist on jQuery.lightcase") : f.init.apply(this, arguments) } }(jQuery), $(".showcase").lightcase();




$(function () { var b, c, a, e; $(".ripplelink").click(function (d) { if ($(this).find(".ink").length === 0) { $(this).prepend("<span class='ink'></span>") } b = $(this).find(".ink"); b.removeClass("animate"); if (!b.height() && !b.width()) { c = Math.max($(this).outerWidth(), $(this).outerHeight()); b.css({ height: c, width: c }) } a = d.pageX - $(this).offset().left - b.width() / 2; e = d.pageY - $(this).offset().top - b.height() / 2; b.css({ top: e + "px", left: a + "px" }).addClass("animate") }); $(".ripplelink2").click(function (d) { if ($(this).find(".ink2").length === 0) { $(this).prepend("<span class='ink2'></span>") } b = $(this).find(".ink2"); b.removeClass("animate"); if (!b.height() && !b.width()) { c = Math.max($(this).outerWidth(), $(this).outerHeight()); b.css({ height: c, width: c }) } a = d.pageX - $(this).offset().left - b.width() / 2; e = d.pageY - $(this).offset().top - b.height() / 2; b.css({ top: e + "px", left: a + "px" }).addClass("animate") }) });
$('.searchbox input').keyup(function () {
    if ($(this).val().length > 0) {
        $(this).parent('.searchbox').find('label').addClass('active');
    }
    else {
        $(this).parent('.searchbox').find('label').removeClass('active');
    }
});
$(window).load(function () {
    var h = $(window).height();
    $('.menu>i').click(function () {
        $('.menu').toggleClass('active');
        $('.menu-in').css("height", h);
    });

})

/*----------comparelist-------------------*/
$('.compareList .compare').on('click', function (event) {
    event.preventDefault();
    $(this).parent('.compareList').children('.compareList-Box').slideToggle();
    $('.cart-wrapper').slideUp();
    $('.itembox  .wishList-Box').css('display', 'none');
});

$(document).on('click', function (event) {
    (!$(event.target).is('.compareList .compare') && $('.compareList .compareList-Box').slideUp());
});
$('.compareList').on('click', function (e) {
    e.stopPropagation();
});
/*----------favorites-------------------*/
$('.wishList .favorites').on('click', function (event) {
    event.preventDefault();
    $(this).parent('.wishList').children('.wishList-Box').slideToggle();
    $('.cart-wrapper').slideUp();
    $('.itembox  .compareList-Box').css('display','none');

});

$(document).on('click', function (event) {
    (!$(event.target).is('.wishList .favorites') && $('.wishList .wishList-Box').slideUp());
});
$('.wishList').on('click', function (e) {
    e.stopPropagation();
});

/************************ CATEGORY *****************************/
$('.category li a').click(function (e) {
    var condition = $(this).parent('li').hasClass('noSub');
    $(this).parent('li').siblings('li').removeClass('open');
    if (!condition) {
        e.preventDefault();
    }

    $(this).parent('li').siblings('li').children('ul').slideUp('fast');
    $(this).parent('li').toggleClass('open');
    var ullist = $(this).parent().children('ul:first');
    ullist.slideToggle('down');
});

$('.sidebar-widget-title').click(function (e) {
    e.preventDefault();
    $(this).parent('.parentCategori').find('ul.category').slideToggle('down');
    $(this).parent('.parentCat').find('ul.category').slideToggle('down');
    $(this).toggleClass('colors');
});
$(document).on('click', function (e) {
    (!$(event.target).is('.sidebar-widget-title') && $('ul.category').slideUp() && $('.search-result-list').slideUp() && $('.toggleCategori').removeClass('rotate') && $('.sidebar-widget-title').removeClass('colors'));
});
$('.parentCategori').click(function (e) {
    e.stopPropagation();
});
$('.parentCat').click(function (e) {
    e.stopPropagation();
});


$(document).ready(function () {
    $('.select-dropdown').click(function () {
        $('.select-wrapper').removeClass('selectDrop');
        $(this).parents('.select-wrapper').parents('.select-wrapper').addClass('selectDrop');
    });
    $(document).on('click', function (event) {
        (!$(event.target).is('.select-dropdown') && $('.select-wrapper').removeClass('selectDrop'));
    });
    $('.dropdown-content li').click(function () {
        $(this).parents('.select-wrapper').removeClass('selectDrop');
    });
});
/*------------------- form -----------------------*/
$('.CustomForm input').keyup(function () {
    if ($(this).val().length > 0) {
        $(this).parent('.input-field').find('label').addClass('active');
    }
    else {
        $(this).parent('.input-field').find('label').removeClass('active');
    }
});
$('.CustomForm textarea').keyup(function () {
    if ($(this).val().length > 0) {
        $(this).parent('.input-field').find('label').addClass('active');
    }
    else {
        $(this).parent('.input-field').find('label').removeClass('active');
    }
});